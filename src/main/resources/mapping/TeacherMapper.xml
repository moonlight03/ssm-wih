<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.TeacherMapper">
    <select id="selectAllTea" resultType="com.example.entity.Teacher">
    select * from student
</select>
    <insert id="saveTeacher" parameterType="com.example.entity.Teacher">
    insert into teacher (tid,tname,gender,email,phone) values (#{tid},#{tname},#{gender},#{email},#{phone})
</insert>
    <select id="getTeaCount" resultType="java.lang.Integer">
    select count(*) from teacher
    </select>

    <select id="getItsClass" resultType="java.util.HashMap">
      select classid as cid , classname as cname from class
    </select>

    <select id="getItsClassById" resultType="java.util.HashMap">
     select c.classid as cid , c.classname as cname from class c
       left join tcrecord t on c.classid = t.cid where t.tid = #{id}
    </select>

    <select id="getJobByCIdAndTid" resultType="java.util.HashMap">
        select jd.jid as value ,jd.context as label from jobdemand jd
        left join jobrecord jr on jd.jid=jr.jid
        where jr.cid = #{cid} and jr.tid = #{tid}
    </select>
    <select id="getStudentJobByJidAndCid" resultType="java.util.HashMap">
        select s.sname as sname ,s.sid as sid ,sj.score as score , sj.path as path ,
        sj.status as status,sj.jid as jid
        from student s
        left join sjrecord sj on s.sid=sj.sid
        where s.classid = #{cid} and sj.jid = #{jid}
    </select>
    <update id="goToUpdateStuScore">
        update sjrecord SET score=#{score}, status=2
        where jid=#{jid} and sid=#{sid}
    </update>

    <select id="pageQuery" resultType="java.util.HashMap">
        select t.tid,t.tname,t.gender,t.email,t.phone from teacher t
        where 1=1
        <if test="tname != null and tname != ''">
            and t.tname like concat('%',#{tname},'%')
        </if>
        limit #{currentPage},#{pagesize}
    </select>
    <update id="updateOne" parameterType="com.example.entity.Teacher">
 update teacher SET tname=#{tname},gender=#{gender},
        email=#{email},phone=#{phone}
 where tid=#{tid}
</update>
    <delete id="deleteOne" parameterType="java.lang.String">
        delete from teacher where tid = #{tid}
    </delete>
</mapper>